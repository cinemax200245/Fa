# -*- coding: utf-8 -*-
"""Mask Detection Streamlit.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yAAL0aHIUbiUBB3xIenJMgZNYUb8ap11
"""

#importing the basic libraries
import os
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.image as mpimg
import pandas as pd
import cv2
from google.colab.patches import cv2_imshow
from PIL import Image
from sklearn.model_selection import train_test_split
import warnings
warnings.filterwarnings(action='ignore')

# loading the saved model
loadedMod=pickle.load(open('/content/drive/MyDrive/trained_model.sav','rb'))

input_imagePath=input("Enter the Image Path : ")
input_image=cv2.imread(input_imagePath)
cv2_imshow(input_image)
input_imageResized=cv2.resize(input_image,(128,128))
input_imageScaled=input_imageResized/255
input_imageReshape=np.reshape(input_imageScaled,[1,128,128,3])
input_prediction=loadedMod.predict(input_imageReshape)
print(input_prediction)

input_predLabel=np.argmax(input_prediction)
print(input_predLabel)

if(input_predLabel==0): #originally it was 1, i had to tweak it to 1 due to sudden anomalous behaviour of my model
  print("The Person is Wearing A Mask")
else:
  print("The Person is not wearing a Mask")

"""#### Now we will use StreamLit Library"""

import numpy as np
import pickle
import streamlit as st

#convreting the above model into a function-cinemax200245
def predict_mask(image_path, model):
   input_imagePath=input("Enter the Image Path : ")
   input_image=cv2.imread(input_imagePath)
   cv2_imshow(input_image)
   input_imageResized=cv2.resize(input_image,(128,128))
   input_imageScaled=input_imageResized/255
   input_imageReshape=np.reshape(input_imageScaled,[1,128,128,3])
   input_prediction=loadedMod.predict(input_imageReshape)
   print(input_prediction)
   input_predLabel=np.argmax(input_prediction)
   print(input_predLabel)
   if(input_predLabel==0): #originally it was 1
     return 'The Person is Wearing A Mask'
   else:
     return 'The Person is not wearing a Mask'

import streamlit as st
from PIL import Image

# Title for our webpage
st.title("Mask Predictor Web App")

def main():
    # Allow user to upload an image
    uploaded_image = st.file_uploader("Choose an image", type=["jpg", "jpeg", "png"])

    # Check if image has been uploaded
    if uploaded_image is not None:
        # Display the uploaded image
        image = Image.open(uploaded_image)
        st.image(image, caption='Uploaded Image', use_column_width=True)

        # Use the predict_mask function to make a prediction
        if st.button("Predict"):
            # Use the predict_mask function to make a prediction
            prediction = predict_mask(image)

        # Display the prediction result
        if prediction:
            st.write("Mask is being worn in the image.")
        else:
            st.write("Mask is not being worn in the image.")
    else:
        st.write("Please upload an image.")

if __name__ == "__main__":
    main()

